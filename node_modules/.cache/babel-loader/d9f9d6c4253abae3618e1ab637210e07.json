{"ast":null,"code":"import useHoverDirty from './useHoverDirty';\nimport useMouse from './useMouse';\nvar nullRef = {\n  current: null\n};\nvar useMouseHovered = function useMouseHovered(ref, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var whenHovered = !!options.whenHovered;\n  var bound = !!options.bound;\n  var isHovered = useHoverDirty(ref, whenHovered);\n  var state = useMouse(whenHovered && !isHovered ? nullRef : ref);\n  if (bound) {\n    state.elX = Math.max(0, Math.min(state.elX, state.elW));\n    state.elY = Math.max(0, Math.min(state.elY, state.elH));\n  }\n  return state;\n};\nexport default useMouseHovered;","map":null,"metadata":{},"sourceType":"module"}