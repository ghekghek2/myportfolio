{"ast":null,"code":"import { useMemo, useState } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { isBrowser, noop } from './misc/util';\nvar defaultState = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0\n};\nfunction useMeasure() {\n  var _a = useState(null),\n    element = _a[0],\n    ref = _a[1];\n  var _b = useState(defaultState),\n    rect = _b[0],\n    setRect = _b[1];\n  var observer = useMemo(function () {\n    return new window.ResizeObserver(function (entries) {\n      if (entries[0]) {\n        var _a = entries[0].contentRect,\n          x = _a.x,\n          y = _a.y,\n          width = _a.width,\n          height = _a.height,\n          top_1 = _a.top,\n          left = _a.left,\n          bottom = _a.bottom,\n          right = _a.right;\n        setRect({\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          top: top_1,\n          left: left,\n          bottom: bottom,\n          right: right\n        });\n      }\n    });\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    if (!element) return;\n    observer.observe(element);\n    return function () {\n      observer.disconnect();\n    };\n  }, [element]);\n  return [ref, rect];\n}\nexport default isBrowser && typeof window.ResizeObserver !== 'undefined' ? useMeasure : function () {\n  return [noop, defaultState];\n};","map":null,"metadata":{},"sourceType":"module"}