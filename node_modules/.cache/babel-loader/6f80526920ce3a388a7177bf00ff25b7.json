{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nvar Status;\n(function (Status) {\n  Status[Status[\"init\"] = 0] = \"init\";\n  Status[Status[\"play\"] = 1] = \"play\";\n  Status[Status[\"pause\"] = 2] = \"pause\";\n  Status[Status[\"end\"] = 3] = \"end\";\n})(Status || (Status = {}));\nvar useSpeech = function useSpeech(text, options) {\n  var mounted = useRef(false);\n  var _a = useState(function () {\n      var _a = options.voice || {},\n        _b = _a.lang,\n        lang = _b === void 0 ? 'default' : _b,\n        _c = _a.name,\n        name = _c === void 0 ? '' : _c;\n      return {\n        isPlaying: false,\n        status: Status[Status.init],\n        lang: options.lang || 'default',\n        voiceInfo: {\n          lang: lang,\n          name: name\n        },\n        rate: options.rate || 1,\n        pitch: options.pitch || 1,\n        volume: options.volume || 1\n      };\n    }),\n    state = _a[0],\n    setState = _a[1];\n  var handlePlay = useCallback(function () {\n    if (!mounted.current) {\n      return;\n    }\n    setState(function (preState) {\n      return __assign(__assign({}, preState), {\n        isPlaying: true,\n        status: Status[Status.play]\n      });\n    });\n  }, []);\n  var handlePause = useCallback(function () {\n    if (!mounted.current) {\n      return;\n    }\n    setState(function (preState) {\n      return __assign(__assign({}, preState), {\n        isPlaying: false,\n        status: Status[Status.pause]\n      });\n    });\n  }, []);\n  var handleEnd = useCallback(function () {\n    if (!mounted.current) {\n      return;\n    }\n    setState(function (preState) {\n      return __assign(__assign({}, preState), {\n        isPlaying: false,\n        status: Status[Status.end]\n      });\n    });\n  }, []);\n  useEffect(function () {\n    mounted.current = true;\n    var utterance = new SpeechSynthesisUtterance(text);\n    options.lang && (utterance.lang = options.lang);\n    options.voice && (utterance.voice = options.voice);\n    utterance.rate = options.rate || 1;\n    utterance.pitch = options.pitch || 1;\n    utterance.volume = options.volume || 1;\n    utterance.onstart = handlePlay;\n    utterance.onpause = handlePause;\n    utterance.onresume = handlePlay;\n    utterance.onend = handleEnd;\n    window.speechSynthesis.speak(utterance);\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return state;\n};\nexport default useSpeech;","map":null,"metadata":{},"sourceType":"module"}