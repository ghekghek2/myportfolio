{"ast":null,"code":"import { useMemo, useReducer } from 'react';\nvar useMethods = function useMethods(createMethods, initialState) {\n  var reducer = useMemo(function () {\n    return function (reducerState, action) {\n      var _a;\n      return (_a = createMethods(reducerState))[action.type].apply(_a, action.payload);\n    };\n  }, [createMethods]);\n  var _a = useReducer(reducer, initialState),\n    state = _a[0],\n    dispatch = _a[1];\n  var wrappedMethods = useMemo(function () {\n    var actionTypes = Object.keys(createMethods(initialState));\n    return actionTypes.reduce(function (acc, type) {\n      acc[type] = function () {\n        var payload = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          payload[_i] = arguments[_i];\n        }\n        return dispatch({\n          type: type,\n          payload: payload\n        });\n      };\n      return acc;\n    }, {});\n  }, [createMethods, initialState]);\n  return [state, wrappedMethods];\n};\nexport default useMethods;","map":null,"metadata":{},"sourceType":"module"}