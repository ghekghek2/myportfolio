{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isNavigator, noop, off, on } from './misc/util';\nvar useMediaDevices = function useMediaDevices() {\n  var _a = useState({}),\n    state = _a[0],\n    setState = _a[1];\n  useEffect(function () {\n    var mounted = true;\n    var onChange = function onChange() {\n      navigator.mediaDevices.enumerateDevices().then(function (devices) {\n        if (mounted) {\n          setState({\n            devices: devices.map(function (_a) {\n              var deviceId = _a.deviceId,\n                groupId = _a.groupId,\n                kind = _a.kind,\n                label = _a.label;\n              return {\n                deviceId: deviceId,\n                groupId: groupId,\n                kind: kind,\n                label: label\n              };\n            })\n          });\n        }\n      }).catch(noop);\n    };\n    on(navigator.mediaDevices, 'devicechange', onChange);\n    onChange();\n    return function () {\n      mounted = false;\n      off(navigator.mediaDevices, 'devicechange', onChange);\n    };\n  }, []);\n  return state;\n};\nvar useMediaDevicesMock = function useMediaDevicesMock() {\n  return {};\n};\nexport default isNavigator && !!navigator.mediaDevices ? useMediaDevices : useMediaDevicesMock;","map":null,"metadata":{},"sourceType":"module"}