{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\nvar getInitialState = function getInitialState(query, defaultState) {\n  // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n  if (defaultState !== undefined) {\n    return defaultState;\n  }\n  if (isBrowser) {\n    return window.matchMedia(query).matches;\n  }\n  // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\n  }\n  return false;\n};\nvar useMedia = function useMedia(query, defaultState) {\n  var _a = useState(getInitialState(query, defaultState)),\n    state = _a[0],\n    setState = _a[1];\n  useEffect(function () {\n    var mounted = true;\n    var mql = window.matchMedia(query);\n    var onChange = function onChange() {\n      if (!mounted) {\n        return;\n      }\n      setState(!!mql.matches);\n    };\n    mql.addListener(onChange);\n    setState(mql.matches);\n    return function () {\n      mounted = false;\n      mql.removeListener(onChange);\n    };\n  }, [query]);\n  return state;\n};\nexport default useMedia;","map":null,"metadata":{},"sourceType":"module"}