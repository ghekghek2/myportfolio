{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { noop, off, on } from './misc/util';\n// const usePermission = <T extends PermissionDescriptor>(permissionDesc: T): IState => {\nvar usePermission = function usePermission(permissionDesc) {\n  var _a = useState(''),\n    state = _a[0],\n    setState = _a[1];\n  useEffect(function () {\n    var mounted = true;\n    var permissionStatus = null;\n    var onChange = function onChange() {\n      if (!mounted) {\n        return;\n      }\n      setState(function () {\n        var _a;\n        return (_a = permissionStatus === null || permissionStatus === void 0 ? void 0 : permissionStatus.state) !== null && _a !== void 0 ? _a : '';\n      });\n    };\n    navigator.permissions.query(permissionDesc).then(function (status) {\n      permissionStatus = status;\n      on(permissionStatus, 'change', onChange);\n      onChange();\n    }).catch(noop);\n    return function () {\n      permissionStatus && off(permissionStatus, 'change', onChange);\n      mounted = false;\n      permissionStatus = null;\n    };\n  }, [permissionDesc]);\n  return state;\n};\nexport default usePermission;","map":null,"metadata":{},"sourceType":"module"}